#pragma once

#include "Scene.hpp"

//----------------------------------------------------------------------------//
// Node
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
Node::Node(Scene* _scene)
{

}
//----------------------------------------------------------------------------//
Node::~Node(void)
{

}
//----------------------------------------------------------------------------//
void Node::SetParent(Node* _parent)
{
	ASSERT(_parent != this);
	if (m_parent == _parent)
		return;

	if (m_parent)
	{
		_Unlink(m_parent->m_child);
	}
	else
	{
		// ...
	}

	// _UpdateWorldTM();
	m_parent = _parent;
	// _UpdateLocalTM();

	if (m_parent)
	{
		_Link(m_parent->m_child);
	}
	else
	{
		// ...
	}
}
//----------------------------------------------------------------------------//
void Node::_Link(Node*& _list)
{
	ASSERT(m_prev == nullptr && m_next == nullptr && _list != this);

	m_next = _list;
	_list = this;
	if (m_next)
		m_next->m_prev = this;
}
//----------------------------------------------------------------------------//
void Node::_Unlink(Node*& _list)
{
	if (m_next)
		m_next->m_prev = m_prev;
	if (m_prev)
		m_prev->m_next = m_next;
	else
		_list = m_next;

	m_prev = nullptr;
	m_next = nullptr;
}
//----------------------------------------------------------------------------//
void Node::_UpdateLocalTM(void)
{
	if (m_parent)
	{

	}
	else
	{

	}
}
//----------------------------------------------------------------------------//
void Node::_UpdateWorldTM(void)
{

}
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
// Scene
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
uint Scene::_RegisterNode(Node* _node)
{
	uint _id = 0;
	if (m_freeIds.Size())
	{
		_id = m_freeIds.Top();
		m_freeIds.Pop();
	}
	else
	{
		_id = m_nodes.Size();
		m_nodes.Push(nullptr);
	}
	m_nodes[_id] = _node;
	return _id;
}
//----------------------------------------------------------------------------//
void Scene::_UnregisterNode(Node* _node)
{
	
}
//----------------------------------------------------------------------------//

//----------------------------------------------------------------------------//
// 
//----------------------------------------------------------------------------//
